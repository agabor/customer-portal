<?php

/**
 * Customer Portal
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use App\User;
use Illuminate\Support\Facades\Request;

class DefaultApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation loginPost
     *
     * .
     *
     *
     * @return Http response
     */
    public function loginPost()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['user_name'])) {
            throw new \InvalidArgumentException('Missing the required parameter $user_name when calling loginPost');
        }
        $user_name = $input['user_name'];

        if (!isset($input['password'])) {
            throw new \InvalidArgumentException('Missing the required parameter $password when calling loginPost');
        }
        $password = $input['password'];

        $u = User::where('name', $user_name)->first();


        if ($u == null)
            return response('no such user', 401);

        if ($u->password != password_hash($password, PASSWORD_DEFAULT))
            return response('wrong password', 401);


        return response('How about implementing loginPost as a POST method ?');
    }
    /**
     * Operation logoutPost
     *
     * .
     *
     *
     * @return Http response
     */
    public function logoutPost()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['token'])) {
            throw new \InvalidArgumentException('Missing the required parameter $token when calling logoutPost');
        }
        $token = $input['token'];


        return response('How about implementing logoutPost as a POST method ?');
    }
    /**
     * Operation projectsGet
     *
     * .
     *
     *
     * @return Http response
     */
    public function projectsGet()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['token'])) {
            throw new \InvalidArgumentException('Missing the required parameter $token when calling projectsGet');
        }
        $token = $input['token'];


        return response('How about implementing projectsGet as a GET method ?');
    }
    /**
     * Operation projectsIdGet
     *
     * .
     *
     * @param string $id project identifier (required)
     *
     * @return Http response
     */
    public function projectsIdGet($id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing projectsIdGet as a GET method ?');
    }
}
