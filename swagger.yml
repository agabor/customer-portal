
swagger: '2.0'

info:
  version: "0.1"
  title: Customer Portal
  
host: cp.agabor.hu
schemes:
  - http
basePath: /api/v1
produces:
  - application/json
    
paths:
  /login:
    post:
      description: |
       Login with username and password. The response contains a JWT.
      parameters:
        -
          name: user_name
          in: query
          required: true
          type: string
        -
          name: password
          in: query
          required: true
          type: string
      responses:
        200:
          description: OK
        401:
          description: If username or password is incorrect.
          schema:
             $ref: '#/definitions/LoginError'
  /logout:
    post:
      responses:
        200:
          description: OK
  /projects:
    get:
      description: list of projects
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectBase'
    patch:
      description: add new project
      parameters:
        -
          name: name
          in: query
          description: project name
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Project'
  /projects/{id}:
    get:
      description: project data
      parameters:
        -
          name: id
          in: path
          description: project identifier
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Project'
    delete:
      parameters:
        -
          name: id
          in: path
          description: project identifier
          required: true
          type: string
      responses:
        200:
          description: OK
  /projects/{id}/texts:
    put:
      description: update texts
      parameters:
        -
          name: id
          in: path
          description: project identifier
          required: true
          type: string
        -
          name: body
          in: body
          schema:
            properties:
              sources:
                type: array
                items:
                  $ref: '#/definitions/Text'
      responses:
        200:
          description: OK
  /projects/{id}/images:
    patch:
      description: add image
      parameters:
        -
          name: id
          in: path
          description: project identifier
          required: true
          type: string
        -
          name: name
          in: query
          type: string
        -
          name: description
          in: query
          type: string
        -
          name: preferredWidth
          in: query
          type: number
          format: integer
        -
          name: preferredHeight
          in: query
          type: number
          format: integer
          
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Image'
  /projects/{id}/images/{imageId}:
    post:
      description: update image
      consumes:
        - multipart/form-data
      parameters:
        -
          name: id
          in: path
          description: project identifier
          required: true
          type: string
        -
          name: imageId
          in: path
          description: image identifier
          required: true
          type: string
        -
         name: image
         in: formData
         description: The uploaded image
         required: true
         type: file
      responses:
        200:
          description: OK
    delete:
      description: delete image
      parameters:
        -
          name: id
          in: path
          description: project identifier
          required: true
          type: string
        -
          name: imageId
          in: path
          description: image identifier
          required: true
          type: string
      responses:
        200:
          description: OK
    patch:
      description: modify image
      parameters:
        -
          name: id
          in: path
          description: project identifier
          required: true
          type: string
        -
          name: imageId
          in: path
          description: image identifier
          required: true
          type: string
        -
          name: name
          in: query
          type: string
        -
          name: description
          in: query
          type: string
        -
          name: preferredWidth
          in: query
          type: number
          format: integer
        -
          name: preferredHeight
          in: query
          type: number
          format: integer
          
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Image'
      
definitions:
  LoginError:
    type: object
    properties:
      error:
        type: string
        enum: ["user_not_found", "password_error"]

  ProjectBase:
    type: object
    properties:
      name:
        type: string
        example: Sample Project
      slug:
        type: string
        example: sample_project
      warnings:
        type: number
        format: integer
      progress:
        type: number
        format: integer
  Project:
    allOf:
      - $ref: '#/definitions/ProjectBase'
      - properties:
          texts:
            type: array
            items:
              $ref: '#/definitions/Text'
          images:
            type: array
            items:
              $ref: '#/definitions/Image'
          files:
            type: array
            items:
              $ref: '#/definitions/File'
          locales:
            type: array
            items:
              $ref: '#/definitions/Locale'
            example: [{"localeId": "en_US",  "name": "English"},{"localeId": "hu_HU",  "name": "Hungarian"}]
  Locale:
    type: object
    properties:
      localeId:
        type: string
        example: en_US
      name:
        type: string
        example: English
  Image:
    type: object
    properties:
      imageId:
        type: string
        example: facebook_icon
      name:
        type: string
        example: "Facebook Icon"
      description:
        type: string
      width:
        type: number
        format: integer
        example: 500
      height:
        type: number
        format: integer
        example: 512
      preferredWidth:
        type: number
        format: integer
        example: 500
      preferredHeight:
        type: number
        format: integer
        example: 512
      fileName:
        type: string
        example: "logo.png"
      conditions:
        type: array
        items:
          $ref: '#/definitions/ImageCondition'
  ImageCondition:
    type: object
    required: [ name, value ]
    properties:
      name:
        type: string
        enum: ["minWidth", "maxWidth", "minHeight", "maxHeight"]
      value:
        type: integer
  Text:
    type: object
    properties:
      textId:
        type: string
        example: "webpage_title"
      name:
        type: string
        example: "Webpage Title"
      description:
        type: string
      startGroup:
        type: string
      minLength:
        type: integer
        example: 10
      maxLength:
        type: integer
        example: 20
      values:
        type: array
        items:
          $ref: '#/definitions/LocalText'
        example: [{"localeId": "en_US",  "value": "Sample Project Webpage"},{"localeId": "hu_HU",  "value": "Pelda Projekt Weboldal"}]
  LocalText:
    type: object
    properties:
      localeCode:
        type: string
        example: en_US
      value:
        type: string
        example: Sample Project Webpage
  File:
    type: object
    properties:
      fileId:
        type: string
        example: "terms_and_conditions"
      name:
        type: string
        example: "Terms and Conditions"
      description:
        type: string
      fileName:
        type: string
        example: "licence.pdf"
      ext:
        type: array
        description: allowed file extensions
        items:
          type: string
        example: ["doc", "docx", "pdf"]
      size:
        type: number
        format: integer
        description: maximum file size in KB
        example: 10000
      maxSize:
        type: number
        format: integer
        description: maximum file size in KB
        example: 10000
      